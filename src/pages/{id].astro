---
const { collection } = Astro.props;

// src/pages/posts/[id].astro
// Tell Astro what pages to build for your route "/pages/:id"
export async function getStaticPaths() {
  // Lets fetch posts from CSS Tricks' Headless CMS:
  const CSS_TRICKS_CMS = 'https://css-tricks.com/wp-json/wp/v2/posts';
  const allPosts = await fetch(CSS_TRICKS_CMS).then(r => r.json());
  // Then, create a new page from every post:
  return allPosts.map((post) => ({
    // Set the URL param ":id" in the page URL
    params: {id: post.id},
    // Pass the post object as a prop to the page
    props: {post},
  }));
}

---
<html lang="en">
  <head>
  <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Anime show: {collection.params?.name}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
    <link rel="stylesheet" href="/style/global.css">
    <link rel="stylesheet" href="/style/home.css">
    <style lang="scss">
    .container {
        margin: 4rem;
        display: grid;
         @media (max-width: 650px) {
          margin: 2rem;
        }
    }
    a, p {
        margin-bottom: 0.5rem;
    }
    h1 {
        margin-bottom: 1rem;
    }
    </style>
  </head>
  <body>
    <div class="container">
        <a href="/">&larr; Go back</a>
        <h1>{collection.params?.name}</h1>
        <p>These are all episodes for this show:</p>
        <ul class="list">
            {collection.data[0]?.episodes.map((item) => <li>{item.attributes.number} - {item.attributes.canonicalTitle}</li>)}
        </ul>
     </div>
  </body>
</html>
